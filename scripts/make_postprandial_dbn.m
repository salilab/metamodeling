% Make a DBN for the postprandial model with the following variables
%
% Time-dependent variables
%
% Reference variables
% Gex.ref, Gin.ref, Spancreas.ref
%
% Observed variables
%
% Time-invariant variables
%
% Parameters
%
% To generate a conditional gaussian model

function [dbn_factory]= make_postprandial_dbn(Gex_mean_postprandial, Y_mean_postprandial, alpha_mean_postprandial,...
                                              beta_mean_postprandial, gamma_mean_postprandial, k1_mean_postprandial, ...
                                              k2_mean_postprandial, K_mean_postprandial, dt_mean_postprandial_min, ...
                                              Gb_mean_postprandial, DGintake_mean_postprandial, Sb_mean_postprandial, ...
                                              I_mean_postprandial,...
                                              Gex_cov_postprandial, Y_cov_postprandial, Gb_cov_postprandial, ...
                                              DGintake_cov_postprandial, Sb_cov_postprandial, I_cov_postprandial,...
                                              min_cov_postprandial,G_minus_Gb_w_G_postprandial,S_w_I_postprandial);
    
    node_names = {'DGintake.postprandial','DGintake.ref','DGintake.obs','Gex.postprandial','Gex.ref',...
                  'Gin.ref','Gb.postprandial','G_minus_Gb.postprandial','Y.postprandial','Spancreas.ref',...
                  'S.postprandial','I.postprandial'}; 
    n= length(node_names);
    
    % Intra - in one time slice
    edges_intra= {'DGintake.postprandial','DGintake.ref';'DGintake.ref','DGintake.obs';'Gb.postprandial','G_minus_Gb.postprandial';...
                  'Gex.postprandial','G_minus_Gb.postprandial'; 'Gex.postprandial', 'Gex.ref';'Gex.ref','Gin.ref';...
                  'DGintake.postprandial','S.postprandial'; ...
                  'Y.postprandial','S.postprandial';'Spancreas.ref','S.postprandial'};
    
    % Inter - between time slices
    edges_inter= { 'DGintake.postprandial','DGintake.postprandial';'DGintake.postprandial','Gex.postprandial';'I.postprandial','Gex.postprandial';...
                   'Gex.postprandial', 'Gex.postprandial'; 'Gb.postprandial', 'Gb.postprandial';'G_minus_Gb.postprandial','G_minus_Gb.postprandial';,...
                   'G_minus_Gb.postprandial','Gex.postprandial';  ...
                   'G_minus_Gb.postprandial','Y.postprandial';'Y.postprandial', 'Y.postprandial'; 'S.postprandial','S.postprandial';...
                   'S.postprandial','I.postprandial';'I.postprandial','I.postprandial' }; 
    
    % 'Equivalence classes' specify how the template is initiated and rolled
    % Specify which CPD is associates with each node in either time
    % slice 1 (eclass1) or in slice 2 onwards (eclass2)
    eclass1_map= containers.Map();
    eclass2_map= containers.Map();
    for i=1:numel(node_names)
        node_name= node_names{i};
        cpd_name= [ node_name '.intra' ];
        eclass1_map(node_name) = cpd_name;
        eclass2_map(node_name) = cpd_name; 
    end
    eclass2_map('DGintake.postprandial')= 'DGintake.postprandial.inter';
    eclass2_map('Gb.postprandial')= 'Gb.postprandial.inter';
    eclass2_map('Gex.postprandial')= 'Gex.postprandial.inter';
    eclass2_map('G_minus_Gb.postprandial')= 'G_minus_Gb.postprandial.inter';
    eclass2_map('Y.postprandial')= 'Y.postprandial.inter';   
    eclass2_map('S.postprandial')= 'S.postprandial.inter';   
    eclass2_map('I.postprandial')= 'I.postprandial.inter';  
    
    % elcass1 (time-slice 0 or all parents are in the same time slice)
    % When using clamp, the root node is clamped to the N(0,I) distribution, so that we will not update these parameters during learninGex. 
    CPDFactories= {};
    CPDFactories{end+1}=  ...
        CPDFactory('Gaussian_CPD', 'DGintake.postprandial', 0, ...
        {'mean', DGintake_mean_postprandial,   'cov', DGintake_cov_postprandial} ); % DGintake
    
    CPDFactories{end+1}=  ...
        CPDFactory('Gaussian_CPD', 'DGintake.ref', 0, ...
        {'mean', 0.0,   'cov', DGintake_cov_postprandial*min_cov_postprandial, 'weights', 1.0} ); % DGintake.ref = 1.0 * DGintake
    
    CPDFactories{end+1}=  ...
        CPDFactory('Gaussian_CPD', 'DGintake.obs', 0, ...
        {'mean', 0.0,   'cov', DGintake_cov_postprandial*min_cov_postprandial, 'weights', 1.0} ); % DGintake.obs = 1.0 * DGintake.ref
    
    CPDFactories{end+1}=  ...
        CPDFactory('Gaussian_CPD', 'Gb.postprandial', 0, ...
        {'mean', Gb_mean_postprandial,   'cov', Gb_cov_postprandial} ); % Gb
    
    CPDFactories{end+1}=  ...
        CPDFactory('Gaussian_CPD', 'Gex.postprandial', 0, ...
        {'mean', Gex_mean_postprandial, 'cov', Gex_cov_postprandial} ); % Gex 
    
    weights_G_minus_h0_map_T0= containers.Map(); % parents in slice t
    weights_G_minus_h0_map_T1= containers.Map(); % parents in slice t+1
    weights_G_minus_h0_map_T0('Gex.postprandial')= 1.0;
    weights_G_minus_h0_map_T0('Gb.postprandial')= -1.0;
    CPDFactories{end+1}=  ...
        CPDFactory('Gaussian_CPD', 'G_minus_Gb.postprandial', 0, ...
        {'mean', 0.0, 'cov', Gex_cov_postprandial*min_cov_postprandial}, ...
        weights_G_minus_h0_map_T0, weights_G_minus_h0_map_T1); % G_minus_Gb = 1.0 * Gex - 1.0 * Gb
    
    CPDFactories{end+1} = ...
        CPDFactory('Gaussian_CPD', 'Gex.ref', 0,   ...
        {'mean', 0.0,'cov', Gex_cov_postprandial*min_cov_postprandial, 'weights', 1.0} ); % Gex.ref = 1.0 * Gex
    
    CPDFactories{end+1} = ...
        CPDFactory('Gaussian_CPD', 'Gin.ref', 0, ...
        {'mean', 0.0,'cov', Gex_cov_postprandial*min_cov_postprandial, 'weights', 0.5}); % Gex.obs = 0.5 * Gex.ref
    
    CPDFactories{end+1} = ...
        CPDFactory('Gaussian_CPD', 'Y.postprandial', 0, ...
        {'mean', Y_mean_postprandial, 'cov', Y_cov_postprandial} ); % Y
    
    CPDFactories{end+1} = ...
        CPDFactory('Gaussian_CPD', 'Spancreas.ref', 0, ...
        {'mean', Sb_mean_postprandial, 'cov', Sb_cov_postprandial} ); % Sb
    
    weights_S0_map_T0= containers.Map(); % parents in slice t
    weights_S0_map_T1= containers.Map(); % parents in slice t+1
    INITIAL_K = K_mean_postprandial;
    weights_S0_map_T0('DGintake.postprandial')= 0.0;
    weights_S0_map_T0('Spancreas.ref')= 0.0;
    weights_S0_map_T0('Y.postprandial')= 0.0;
    CPDFactories{end+1}=  ...
        CPDFactory('Gaussian_CPD', 'S.postprandial', 0, ...
        {'mean', Sb_mean_postprandial, 'cov', Sb_cov_postprandial}, ...
        weights_S0_map_T0, weights_S0_map_T1); % S = 1.0 * Sb
    
    CPDFactories{end+1} = ...
        CPDFactory('Gaussian_CPD', 'I.postprandial', 0, ...
        { 'mean', I_mean_postprandial,'cov', I_cov_postprandial} ); % I
 
    % eclass2 (time-slice t+1 with parents in the previous time slice)
    CPDFactories{end+1} = ...
       CPDFactory('Gaussian_CPD', 'DGintake.postprandial', 1, ...
        {'mean',DGintake_mean_postprandial,'cov', DGintake_cov_postprandial, 'weights', 0.0} ); % Gintake(t+1) = 0.0 * Gintake(t+1)
    
    CPDFactories{end+1} = ...
       CPDFactory('Gaussian_CPD', 'Gb.postprandial', 1, ...
        {'mean',0.0,'cov', Gb_cov_postprandial*min_cov_postprandial, 'weights', 1.0} ); % Gb(t+1) = 1.0 * Gb(t)    

    weights_Gex1_map_T0= containers.Map(); 
    weights_Gex1_map_T1= containers.Map();
    INITIAL_k1= k1_mean_postprandial;
    INITIAL_k2= k2_mean_postprandial;
    weights_Gex1_map_T0('DGintake.postprandial')= dt_mean_postprandial_min;
    weights_Gex1_map_T0('I.postprandial')= -INITIAL_k1*dt_mean_postprandial_min; % parents in slice t
    weights_Gex1_map_T0('Gex.postprandial')= 1.0-INITIAL_k2*dt_mean_postprandial_min; % parents in slice t+1
    weights_Gex1_map_T0('G_minus_Gb.postprandial')= G_minus_Gb_w_G_postprandial; % parents in slice t+1
    CPDFactories{end+1} = ...
        CPDFactory('Gaussian_CPD', 'Gex.postprandial', 1, ...
        {'mean',0.0,'cov', Gex_cov_postprandial*min_cov_postprandial}, ...
        weights_Gex1_map_T0, weights_Gex1_map_T1); % Gex (t+1) = 1.0 * Gex(t) + 1.0 * DGintake(t+1) - INITIAL_k1 * dt_mean_postprandial_min * I(t) - INITIAL_k2 * dt_mean_postprandial_min * Gex(t)

    weights_G_minus_h1_map_T0= containers.Map();
    weights_G_minus_h1_map_T1= containers.Map();
    weights_G_minus_h1_map_T0('G_minus_Gb.postprandial')= 0.0;
    weights_G_minus_h1_map_T1('Gex.postprandial')= 1.0;
    weights_G_minus_h1_map_T1('Gb.postprandial')= -1.0;
    CPDFactories{end+1}=  ...
        CPDFactory('Gaussian_CPD', 'G_minus_Gb.postprandial', 1, ...
        {'mean', 0.0, 'cov', Gex_cov_postprandial*min_cov_postprandial}, ...
        weights_G_minus_h1_map_T0, weights_G_minus_h1_map_T1); % G_minus_Gb(t+1) = 1.0 * Gex(t+1) - 1.0 * Gb(t+1)
    
    weights_Y1_map_T0= containers.Map();
    weights_Y1_map_T1= containers.Map();
    INITIAL_ALPHA= alpha_mean_postprandial;
    INITIAL_BETA= beta_mean_postprandial;
    weights_Y1_map_T0('Y.postprandial')= 1.0 - dt_mean_postprandial_min * INITIAL_ALPHA;
    weights_Y1_map_T0('G_minus_Gb.postprandial')= dt_mean_postprandial_min* INITIAL_ALPHA * INITIAL_BETA;
    CPDFactories{end+1} = ...
        CPDFactory('Gaussian_CPD', 'Y.postprandial', 1, ...
        {'mean',0.0,'cov', Y_cov_postprandial*min_cov_postprandial}, ...
        weights_Y1_map_T0, weights_Y1_map_T1); % Y(t+1) = (1.0 - dt_mean_postprandial_min * INITIAL_ALPHA) * Y(t) + (dt_mean_postprandial_min* INITIAL_ALPHA * INITIAL_BETA) * G_minus_Gb
    
    weights_S1_map_T0= containers.Map();
    weights_S1_map_T1= containers.Map();
    weights_S1_map_T1('DGintake.postprandial')= K_mean_postprandial;
    weights_S1_map_T1('Spancreas.ref')= 0.0;
    weights_S1_map_T1('Y.postprandial')= 1.0;
    weights_S1_map_T0('S.postprandial')= 0.0;
    CPDFactories{end+1}=  ...
        CPDFactory('Gaussian_CPD', 'S.postprandial', 1, ...
        {'mean', Sb_mean_postprandial, 'cov', Sb_cov_postprandial*min_cov_postprandial}, ...
        weights_S1_map_T0, weights_S1_map_T1); % S(t+1) = Sb_mean_postprandial + 0.0 * S(t) + INITIAL_K * DGex(t+1) + 1.0 * Sb(t+1) + 1.0 * Y(t+1)
    
    weights_I1_map_T0= containers.Map(); 
    weights_I1_map_T1= containers.Map(); 
    INITIAL_GAMMA= gamma_mean_postprandial;
    weights_I1_map_T0('I.postprandial')= 1 - INITIAL_GAMMA*dt_mean_postprandial_min;
    weights_I1_map_T0('S.postprandial')= S_w_I_postprandial*dt_mean_postprandial_min; % fast
    CPDFactories{end+1}= ...
        CPDFactory('Gaussian_CPD', 'I.postprandial', 1, ...
        {'mean', 0.0, 'cov', I_cov_postprandial*min_cov_postprandial}, ...
        weights_I1_map_T0, weights_I1_map_T1); % I(t+1) = (1 - INITIAL_GAMMA*dt_mean_postprandial_min) * I(t) + dt_mean_postprandial_min * S(t)
    
    % Final DBN factory
    dbn_factory= DBNFactory( ...
        node_names, edges_intra, edges_inter, ...
        eclass1_map, eclass2_map, CPDFactories);
  end

